<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <meta http-equiv="x-ua-compatible" content="ie=edge" />
  <title>Material Design for Bootstrap</title>
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.11.2/css/all.css" />
  <!-- Google Fonts Roboto -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" />

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
  <!-- Boxicons -->
  <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
  <!-- MDB -->
  <link rel="stylesheet" href="css/mdb.min.css" />
  <!-- Custom styles -->
  <link rel="stylesheet" href="css/style.css" />
</head>

<body>
  <style>
    body {
      background: #ffffff;

    }


    .navbar-nav .nav-link.dropdown-toggle::after {
      display: none;
    }

    .navimage {
      width: 2.5rem;
      margin-bottom: -1rem;
      border-radius: 1rem;
    }

    .navimage:hover {
      width: 2.5rem;
      border-style: groove;
      margin-bottom: -1rem;
      border-radius: 1rem;
    }

    .nav-link {
      position: relative;
    }

    .nav-link::after {
      content: '';
      position: absolute;
      left: 0;
      bottom: -2px;
      width: 100%;
      height: 2px;
      background-color: black;
      transform: scaleX(0);
      transform-origin: left center;
      transition: transform 0.3s ease-in-out;
    }

    .nav-link:hover::after {
      transform: scaleX(1);
    }

    .cartproductname {
      text-decoration: none;
      color: black;
    }
  </style>

  <header>
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
      <div class="container">
        <a class="navbar-brand" href="#">
          <img src="/image/Gold Luxury Initial Circle Logo (1).png" alt="Logo" width="30" height="24"
            class="d-inline-block align-text-top">
          Digital Tech
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav ms-auto">
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                aria-expanded="false">
                Category
              </a>
              <ul class="dropdown-menu p-3">
                <li><a class="dropdown-item nav-link" href="/smartphone">Smartphone</a></li>
                <li><a class="dropdown-item nav-link" href="/laptop">Laptop</a></li>
                <li><a class="dropdown-item nav-link" href="/headphone">Headphones</a></li>
              </ul>
            </li>
          </ul>

          <ul class="navbar-nav mb-lg-0">
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                aria-expanded="false">
                Account
              </a>
              <ul class="dropdown-menu p-3">
                <li><a class="dropdown-item nav-link" href="/cart">Cart</a></li>
                <li><a class="dropdown-item nav-link" href="/orderhistory">Order History</a></li>
                <li><a class="dropdown-item nav-link" href="/address">Address</a></li>
                <li><a class="dropdown-item nav-link" href="/wishlist">Wishlist</a></li>
                {{#if userSession}}
                <li>
                  <a href="/login" class="dropdown-item nav-link">logout</a>
                </li>
                {{else}}

                {{/if}}


              </ul>

            </li>
          </ul>

          <ul><a href="/profile" class="profile">
              <img style="   " class="navimage" src="/image/Gold Luxury Initial Circle Logo (1).png">
            </a></ul>
        </div>
      </div>
    </nav>




    <!-- Jumbotron -->


    <!-- Heading -->
    <div class="bg-primary">
      <div class="container py-4">
        <!-- Breadcrumb -->
        <nav class="d-flex">
          <h6 class="mb-0">
            <a href="/" style="text-decoration:none" class="text-white-50">Home</a>
            <span class="text-white-50 mx-2"> > </span>
            <a href="/smartphone" style="text-decoration:none" class="text-white-50">Smartphone</a>
            <span class="text-white-50 mx-2"> > </span>
            <a href="/cart" style="text-decoration:none" class="text-white">Shopping cart</a>
            <span class="text-white-50 mx-2"> > </span>
            <a href="/shippinginfo" style="text-decoration:none" class="text-white-50">Address info</a>
            <span class="text-white-50 mx-2"> > </span>
            <a href="" style="text-decoration:none" class="text-white-50">Payment</a>
          </h6>

        </nav>
        <!-- Breadcrumb -->
      </div>
    </div>
    <!-- Heading -->
  </header>

  <!-- cart + summary -->
  <section class="my-5">
    <div class="container">
      <div class="row">
        <!-- cart -->

        {{#each products}}
        <div id="cartid" hidden>{{this._id}}</div>
        <div class="col-lg-9 mt-4 product">
          <div class="card border shadow-0">
            <div class="m-4">

              <div class="row gy-3">
                <div class="col-lg-5">
                  <div class="me-lg-5">
                    <div class="d-flex">
                      <img src="/{{this.image.filepath}}" class="border rounded me-3"
                        style="width: 96px; height: 96px;" />
                      <div class="">
                        <a href="#" class="cartproductname">{{productname}}</a>
                        <div class="">
                          <strike class="text-muted text-nowrap">Rs.{{productprice}}</strike>
                          <text class="h6">Rs.<span class="price">{{product.saleprice}}</span></text>

                        </div>
                      </div>
                    </div>
                  </div>
                </div>


                {{!--
                <div class="col-lg-2 col-sm-6 col-6 d-flex flex-row flex-lg-column flex-xl-row text-nowrap">
                  <div class="">
                    <select style="width: 100px;" class="form-select me-4 quantity-input" id="options">
                      <option value="1">1</option>
                      <option value="2">2</option>
                      <option value="3">3</option>
                    </select>
                  </div>
                </div> --}}



                <div class="col-lg-2 col-sm-6 col-6 d-flex flex-row flex-lg-column flex-xl-row text-nowrap">
                  <div class="">
                    <select style="width: 100px;" class="form-select me-4 quantity-input" id="options">
                      <option value="1">1</option>
                      <option value="2">2</option>
                      <option value="3">3</option>
                    </select>
                  </div>
                </div>



              
                {{!--
                <div class="col-lg-2 col-sm-6 col-6 d-flex flex-row flex-lg-column flex-xl-row text-nowrap">
                  <div class="">
                    <select style="width: 100px;" class="form-select me-4 quantity-input" name="quantity" id="options">
                      <!-- Quantity options will be dynamically populated here -->
                    </select>
                  </div>
                </div> --}}


                <script>
                  // Examplvscode-file://vscode-app/c:/Users/nikhi/AppData/Local/Programs/Microsoft%20VS%20Code/resources/app/out/vs/code/electron-sandbox/workbench/workbench.htmle variable
                  var option = {{ quantity }};

                  // Get the select element
                  var selectElement = document.getElementById("options");

                  // Set the selected option based on the variable value
                  selectElement.value = option;

                </script>

                <script>
                  // Assuming you have the selected quantity stored in a variable called 'selectedQuantity'
                  const selectedQuantity = {{ quantity }}; // Example value, replace with your actual selected quantity value

                  // Calculate the maximum quantity options to display
                  const maxOptions = Math.min(stock, 3);

                  // Dynamically populate the quantity options based on the maximum options
                  const quantitySelect = document.getElementById('options');
                  for (let i = 1; i <= maxOptions; i++) {
                    const option = document.createElement('option');
                    option.value = i;
                    option.text = i;
                    if (i === selectedQuantity) {
                      option.selected = true;
                    }
                    quantitySelect.appendChild(option);
                  }

                </script>

                <script>
                  document.addEventListener('DOMContentLoaded', function () {
                    const optionsSelect = document.getElementById('options');
                    optionsSelect.addEventListener('change', function () {
                      const quantity = optionsSelect.value;
                      const data = { quantity };

                      fetch('/cart', {
                        method: 'POST',
                        headers: {
                          'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                      })
                        .then(response => {
                          if (response.ok) {
                            console.log('Selected value saved successfully');
                          } else {
                            throw new Error('Error saving selected value');
                          }
                        })
                        .catch(error => {
                          console.error('Error saving selected value:', error);
                        });
                    });
                  });
                </script>

                <div
                  class="col-lg col-sm-6 d-flex justify-content-sm-center justify-content-md-start justify-content-lg-center justify-content-xl-end mb-2">
                  <div class="float-md-end">
                    <p class="text-muted">
                      {{rating}}
                    </p>

                    <form style="display:contents" action="/wishlist/{{this._id}}" method="post">
                      <button class="btn btn-light border px-2 icon-hover-primary"><i
                          class="fas fa-heart fa-lg px-1 text-secondary"></i></button>
                    </form>

                    <a href="/cart?delete_id={{this._id}}" class="btn btn-light border text-danger icon-hover-danger">
                      Remove</a>
                  </div>
                </div>
              </div>

            </div>

            <div class="border-top pt-4 mx-4 mb-4">
              <p><i class="fas fa-truck text-muted fa-lg"></i> Free Delivery within 1-2 weeks</p>

            </div>
          </div>
        </div>
        {{/each}}

        <!-- summary -->
        <div class="col-lg-3">
          <div class="card shadow-0 border">
            <div class="card-body">
              <div class="d-flex justify-content-between">
                <label for="total-price">Total Price:</label>
                <p id="subtotal-price">{{totalPrice}}</p>
              </div>
              <div class="d-flex justify-content-between">
                <p class="mb-2">Discount:</p>
                <p class="mb-2 text-success">00.00</p>
              </div>
              <div class="d-flex justify-content-between">
                <p class="mb-2">TAX:</p>
                <p class="mb-2">00</p>
              </div>
              <div class="d-flex justify-content-between">
                <label for="total-price">Total Price:</label>
                <p id="total-price">{{totalPrice}}</p>
              </div>

              <div class="mt-3">
                <a href="/shippinginfo" class="btn btn-success w-100 shadow-0 mb-2"> Make Purchase </a>
                <a href="/smartphone" class="btn btn-light w-100 border mt-2"> Back to shop </a>
              </div>
            </div>
          </div>
        </div>
        <!-- summary -->
      </div>
    </div>
  </section>


  <script>
    // Get the track status element
    const trackStatusElement = document.getElementById('trackStatus');
    const trackStep1 = document.getElementById('trackStep1');
    const trackStep2 = document.getElementById('trackStep2');
    const trackStep3 = document.getElementById('trackStep3');
    const trackStep4 = document.getElementById('trackStep4');

    // Function to update the track status
    function updateTrackStatus(step) {
      trackStep1.classList.remove('active');
      trackStep2.classList.remove('active');
      trackStep3.classList.remove('active');
      trackStep4.classList.remove('active');

      switch (step) {
        case 1:
          trackStep1.classList.add('active');
          break;
        case 2:
          trackStep2.classList.add('active');
          break;
        case 3:
          trackStep3.classList.add('active');
          break;
        case 4:
          trackStep4.classList.add('active');
          break;
        default:
          break;
      }
    }

    // Check the selected order status
    const selectedStatus = '{{ order.quantity }}';

    // Update the track status based on the selected status
    if (selectedStatus === '1') {
      updateTrackStatus(1);
    } else if (selectedStatus === '2') {
      updateTrackStatus(2);
    } else if (selectedStatus === '3') {
      updateTrackStatus(3);
    } else if (selectedStatus === '4') {
      updateTrackStatus(4);
    }
    // Add more conditions for other possible order statuses and their corresponding track status updates
  </script>


  <script>


    console.log('Hai')
    const subtotalPriceEl = document.getElementById('subtotal-price');
    const totalPriceEl = document.getElementById('total-price');
    const productEls = Array.from(document.getElementsByClassName('product'));
    const cartIdEl = document.getElementById('cartid');
    const cartId = cartIdEl.innerText;


    const updateTotalPrice = (shouldPostRequest = false) => async () => {
      const subtotalPrice = productEls.reduce((sum, x) => {
        const quantityInput = x.querySelector('.quantity-input');
        const priceEl = x.querySelector('.price');
        return sum += Number(quantityInput.value) * Number(priceEl.innerText);
      }, 0);

      const totalPrice = subtotalPrice;
      subtotalPriceEl.innerText = totalPrice.toLocaleString('en-IN', {
        style: 'currency',
        currency: 'INR',
      });
      totalPriceEl.innerText = totalPrice.toLocaleString('en-IN', {
        style: 'currency',
        currency: 'INR',
      });

      if (!shouldPostRequest) return;

      const reqBody = {
        cartId,
        totalPrice,
      }

      const response = await fetch('/cart', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(reqBody),
      });
      const resBody = await response.json();
      console.log(resBody.message);
    }

    updateTotalPrice(false)();

    productEls.map(x => {
      const quantityInput = x.querySelector('.quantity-input');
      const priceEl = x.querySelector('.price');
      quantityInput.addEventListener('change', updateTotalPrice(true))
    })


    document.getElementById('options').addEventListener('change', calculateResult);


    // Hardcoded number
    const hardcodedNumber = {{ totalPrice }};

    // Initial result
    let result = hardcodedNumber;
    document.getElementById('result').textContent = `${result}`;

    function calculateResult() {
      const selectedOption = document.getElementById('options').value;

      if (selectedOption === '1') {
        result = hardcodedNumber; // Option 1: Use the hardcoded number
      } else if (selectedOption === '2') {
        result = hardcodedNumber * 2; // Option 2: Multiply the hardcoded number by 2
      } else if (selectedOption === '3') {
        result = hardcodedNumber * 3; // Option 3: Add 10 to the hardcoded number
      } else {
        result = 'Invalid option';
      }

      document.getElementById('result').textContent = `${result}`;
      document.getElementById('result1').textContent = `${result}`;
    }


  </script>


  </script>

  <!-- MDB -->
  <script type="text/javascript" src="js/mdb.min.js"></script>
  <!-- Custom scripts -->
  <script type="text/javascript" src="js/script.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
    crossorigin="anonymous"></script>

  <script defer src="https://code.jquery.com/jquery-3.5.1.js"></script>
  <script defer src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
  <script defer src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"
    integrity="sha384-zYPOMqeu1DAVkHiLqWBUTcbYfZ8osu1Nd6Z89ify25QV9guujx43ITvfi12/QExE"
    crossorigin="anonymous"></script>
</body>

</html>